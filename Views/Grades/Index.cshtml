@model IEnumerable<StudentManagement.Models.Grade>
@{
    ViewData["Title"] = "List Grade";
}
<div class="container-fluid">
    <div class="d-md-flex d-block align-items-center justify-content-between my-4 page-header-breadcrumb">
        <h1 class="page-title fw-semibold fs-18 mb-0"><i class="fa-solid fa-users"></i> Grades</h1>
    </div>
    <div class="col-xl-12">
        <div class="card custom-card">
            <div class="card-header justify-content-between">
                <div class="card-title">
                    List Grades
                </div>
                <div class="d-flex">
                    <a asp-controller="Grades" asp-action="Create"
                        class="btn btn-sm btn-primary btn-wave waves-light waves-effect waves-light"><i
                            class="ri-add-line fw-semibold align-middle"></i> Add Grade</a>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive table-wrapper mb-3">
                    <table id="datatable-basic" class="table text-nowrap table-striped table-hover table-bordered"
                        style="width:100%">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Student</th>
                                <th>Subject Id</th>
                                <th>Subject Name</th>
                                <th>Score</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grade in Model)
                            {
                                <tr>
                                    <td>
                                        <a class="text-primary">@grade.Id</a>
                                    </td>
                                    <td>
                                        @grade.Student?.FullName
                                    </td>
                                    <td>
                                        @grade.Subject?.SubjectName
                                    </td>
                                    <td>
                                        @grade.Subject?.Description
                                    </td>
                                    <td>
                                        @grade.Score
                                    </td>
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@grade.Id"
                                            class="btn btn-sm btn-primary shadow-primary btn-wave" data-bs-toggle="tooltip"
                                            title="Edit">
                                            <i class="fa fa-fw fa-edit"></i> Edit
                                        </a>
                                        <a type="button" onclick="remove(@grade.Id)"
                                            class="btn btn-sm btn-danger shadow-danger btn-wave" data-bs-toggle="tooltip"
                                            title="Delete">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function remove(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You will not be able to undo this action!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Agree",
            cancelButtonText: "Close"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/Grades/Delete/${id}`, { method: 'POST' })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire("Deleted!", "Grades has been successfully deleted.", "success");
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            throw new Error('Something went wrong');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire("Error", "Unable to delete Grades.", "error");
                    });
            }
        });
    }
</script>